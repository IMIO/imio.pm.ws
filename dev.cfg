[buildout]
extends = 
#    base.cfg
    ws.cfg
    versions-dev.cfg

parts +=
    test
    coverage
    report

extensions += 
    mr.developer

[sources]
appy = svn http://svn.communesplone.org/svn/communesplone/appy/tags/0.8.0
communesplone.iconified_document_actions = svn http://svn.communesplone.org/svn/communesplone/communesplone.iconified_document_actions/trunk
communesplone.layout = svn http://svn.communesplone.org/svn/communesplone/communesplone.layout/trunk
plonetheme.imioapps = svn http://svn.communesplone.org/svn/communesplone/plonetheme.imioapps/trunk
Products.PloneMeeting = svn http://svn.communesplone.org/svn/communesplone/Products.PloneMeeting/trunk
Products.MeetingCommunes = svn http://svn.communesplone.org/svn/communesplone/Products.MeetingCommunes/trunk

[instance1]
#use the instance1 eggs to extends the base eggs defined in [buildout]
recipe = plone.recipe.zope2instance
debug-mode = on
verbose-security = on
environment-vars +=
    ENABLE_PRINTING_MAILHOST True

eggs +=
    Products.PrintingMailHost
    archetypes.schematuning
    ipdb
    iw.debug
    plone.reload
zcml +=
    iw.debug

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
#extra-paths = ${buildout:directory}/parts/omelette
#include-site-packages = true
eggs =
    ipdb
    plone.app.testing
#    Products.MeetingCommunes
#    Products.PloneMeeting
    communesplone.ws4plonemeeting

environment = testenv

[testenv]
zope_i18n_compile_mo_files = true

# create bin/coverage commant
[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    include = '--source=${buildout:directory}/src/Products/PloneMeeting'
    sys.argv = sys.argv[:] + ['run', include, 'bin/test', '--all', '-s', 'Products.PloneMeeting']

# create bin/report command
[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']
