################################################## 
# WS4PM_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from WS4PM_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class WS4PMLocator:
    WS4PM_address = "http://ws4pm.imio.be"
    def getWS4PMAddress(self):
        return WS4PMLocator.WS4PM_address
    def getWS4PM(self, url=None, **kw):
        return WS4PMSOAPSOAP(url or WS4PMLocator.WS4PM_address, **kw)

# Methods
class WS4PMSOAPSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: getConfigInfos
    def getConfigInfos(self, request):
        if isinstance(request, getConfigInfosRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://ws4pm.imio.be/getConfigInfos", **kw)
        # no output wsaction
        response = self.binding.Receive(getConfigInfosResponse.typecode)
        return response

    # op: getItemInfos
    def getItemInfos(self, request):
        if isinstance(request, getItemInfosRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://ws4pm.imio.be/getItemInfos", **kw)
        # no output wsaction
        response = self.binding.Receive(getItemInfosResponse.typecode)
        return response

    # op: searchItems
    def searchItems(self, request):
        if isinstance(request, searchItemsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://ws4pm.imio.be/searchItems", **kw)
        # no output wsaction
        response = self.binding.Receive(searchItemsResponse.typecode)
        return response

    # op: createItem
    def createItem(self, request):
        if isinstance(request, createItemRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://ws4pm.imio.be/createItem", **kw)
        # no output wsaction
        response = self.binding.Receive(createItemResponse.typecode)
        return response

getConfigInfosRequest = ns0.getConfigInfosRequest_Dec().pyclass

getConfigInfosResponse = ns0.getConfigInfosResponse_Dec().pyclass

getItemInfosRequest = ns0.getItemInfosRequest_Dec().pyclass

getItemInfosResponse = ns0.getItemInfosResponse_Dec().pyclass

searchItemsRequest = ns0.searchItemsRequest_Dec().pyclass

searchItemsResponse = ns0.searchItemsResponse_Dec().pyclass

createItemRequest = ns0.createItemRequest_Dec().pyclass

createItemResponse = ns0.createItemResponse_Dec().pyclass
